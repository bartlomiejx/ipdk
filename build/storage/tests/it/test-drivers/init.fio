#!/usr/bin/env bash
#
# Copyright (C) 2022 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

set -e
[ "$DEBUG" == 'true' ] && set -x

current_script_dir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
declare vm_serial
declare nqn
declare storage_target_ip
declare proxy_ip
declare virtio_blk_virtual_id
declare port_to_expose
declare traffic_generator_ip
# shellcheck disable=SC1091
source "${current_script_dir}"/test-helpers

wait_until_port_on_ip_addr_open "${storage_target_ip}" "${DEFAULT_SPDK_PORT}"
create_and_expose_sybsystem_over_tcp \
	"${storage_target_ip}" "${nqn}" "${port_to_expose}"

wait_until_vm_is_up "${vm_serial}"

number_of_512b_blocks=16
malloc0=$(create_ramdrive_and_attach_as_ns_to_subsystem \
	"${storage_target_ip}" Malloc0 "${number_of_512b_blocks}" "${nqn}")
virtio_blk0_physical_id=0
virtio_blk=$(create_virtio_blk "${proxy_ip}" "${malloc0}" \
	"${virtio_blk0_physical_id}" "${virtio_blk_virtual_id}" \
	"${nqn}" "${storage_target_ip}" "${port_to_expose}")

log_in_with_default_credentials "${vm_serial}"

echo "check attachment"
is_virtio_blk_attached "${vm_serial}"

echo "Run fio"
wait_until_host_target_is_up "${vm_serial}"

fio_args="--direct=1 --rw=randrw --bs=4k --ioengine=libaio --iodepth=256 \
	--runtime=1 --numjobs=4 --time_based --group_reporting \
	--name=iops-test-job"
out=$(send_fio_cmd "$traffic_generator_ip" "$HOST_TARGET_SERVICE_PORT" \
					"$virtio_blk" "$fio_args")
echo -e "$out"
echo "${out}" | grep "Disk stats (read/write)"
echo "fio has been executed successfully!"
exit 0
